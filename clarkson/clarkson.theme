<?php
use Drupal\Core\Database\Schema;
use \Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */


 /**
 * Implements hook_preprocess_HOOK() for page alter.
 *
 */
function clarkson_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if(!empty($node) && is_object($node)){
      $content_type = $node->bundle();
      $suggestions[] = 'page__'.$content_type;
    }
  }
}

/**
 * Implements template_preprocess_html().
 */
function clarkson_preprocess_html(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if(!empty($node) && is_object($node)){
      $variables['attributes']['class'][] = 'page-node-' . $node->id();
    }
  }
}

/**
 * Block suggestions for custom block bundles.
 */
function clarkson_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Next-prev suggestions for preprocess node.
 */
function clarkson_preprocess_node(&$variable) { 
  $prevnext = \Drupal::service('prevnext.service');
  $node = $variable['node'];
  $previous_next = $prevnext->getPreviousNext($node);
  $prevnode = \Drupal\node\Entity\Node::load($previous_next['prev']);
  $nextnode = \Drupal\node\Entity\Node::load($previous_next['next']);

  $prevnode_title = '';
  if(!empty($prevnode)){
    $prevnode_title = $prevnode->title->value;
  }

  $nextnode_title = '';
  if(!empty($nextnode)){
    $nextnode_title = $nextnode->title->value;
  }
  //print '<pre>';print_r($previous_next['prev']);print '</pre>';
    $build['prevnext_previous'] = [
      '#theme' => 'prevnext',
      '#direction' => 'previous',
      '#text' => $prevnode_title,
      '#nid' => $previous_next['prev'],
      '#url' => Url::fromUserInput('/node/' . $previous_next['prev'])->toString(),
      '#void' => empty($previous_next['prev']),
    ];
    $build['prevnext_next'] = [
      '#theme' => 'prevnext',
      '#direction' => 'next',
      '#text' => $nextnode_title,
      '#nid' => $previous_next['next'],
      '#url' => Url::fromUserInput('/node/' . $previous_next['next'])->toString(),
      '#void' => empty($previous_next['next']),
    ];
    $variable['prevnext_previous'] = render($build['prevnext_previous']);
    $variable['prevnext_next'] = render($build['prevnext_next']);
}